{
  "_from": "@stewartmcgown/grammarly-api",
  "_id": "@stewartmcgown/grammarly-api@1.1.2",
  "_inBundle": false,
  "_integrity": "sha512-TG9TwtTytSlRs5B7GYVacrZKyo9DA7tV7CgGTdl7KyuqWypd9f/tMd+wmEybRnTAwGGhsQWPKHKRgaOBuunEMA==",
  "_location": "/@stewartmcgown/grammarly-api",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "@stewartmcgown/grammarly-api",
    "name": "@stewartmcgown/grammarly-api",
    "escapedName": "@stewartmcgown%2fgrammarly-api",
    "scope": "@stewartmcgown",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@stewartmcgown/grammarly-api/-/grammarly-api-1.1.2.tgz",
  "_shasum": "53d8f06ab8d15aa599ef51f706bf81f629bd1c83",
  "_spec": "@stewartmcgown/grammarly-api",
  "_where": "C:\\Users\\HP\\Desktop\\Personal Files\\Javascript-Projects\\grammarly-bot",
  "author": {
    "name": "Stewart McGown",
    "email": "stewart@twistedcore.co.uk"
  },
  "bugs": {
    "url": "https://github.com/stewartmcgown/grammarly-api/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "dependencies": {
    "consola": "^2.10.1",
    "node-fetch": "^2.6.0",
    "uuid": "^3.3.2",
    "ws": "^7.1.2"
  },
  "deprecated": false,
  "description": "Client for the Grammarly API",
  "devDependencies": {
    "@bitjson/npm-scripts-info": "^1.0.0",
    "@types/consola": "^1.0.0",
    "@types/jest": "^24.0.17",
    "@types/node-fetch": "^2.5.0",
    "@types/uuid": "^3.4.5",
    "@types/ws": "^6.0.2",
    "codecov": "^3.5.0",
    "cz-conventional-changelog": "^2.1.0",
    "gh-pages": "^2.0.1",
    "jest": "^24.9.0",
    "npm-run-all": "^4.1.5",
    "nps": "^5.9.5",
    "nps-utils": "^1.7.0",
    "prettier": "^1.18.2",
    "standard-version": "^6.0.1",
    "trash-cli": "^3.0.0",
    "tslint": "^5.18.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-immutable": "^6.0.1",
    "typescript": "^3.5.3"
  },
  "engines": {
    "node": ">=8.9"
  },
  "files": [
    "/build"
  ],
  "homepage": "https://github.com/stewartmcgown/grammarly-api#readme",
  "jest": {
    "transform": {
      ".(ts|tsx)": "<rootDir>/tests/preprocessor.js"
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json"
    ],
    "testEnvironment": "node"
  },
  "keywords": [],
  "license": "MIT",
  "main": "build/index.js",
  "name": "@stewartmcgown/grammarly-api",
  "prettier": {
    "singleQuote": true
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stewartmcgown/grammarly-api.git"
  },
  "scripts": {
    "build": "nps build",
    "clean": "trash build test",
    "cov": "run-s build test:unit cov:html && open-cli coverage/index.html",
    "cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
    "cov:html": "nyc report --reporter=html",
    "cov:send": "nyc report --reporter=lcov && codecov",
    "describe": "npm-scripts-info",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:html": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "fix:tslint": "tslint --fix --project .",
    "prepare-release": "run-s reset test cov:check doc:html version doc:publish",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "test": "nps test",
    "version": "standard-version",
    "watch": "run-s clean build:main && run-p \"build:main -- -w\" \"test:unit -- --watch\""
  },
  "scripts-info": {
    "info": "Display information about the package scripts",
    "build": "Clean and rebuild the project",
    "fix": "Try to automatically fix any linting problems",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "cov": "Rebuild, run tests, then create and open the coverage report",
    "doc": "Generate HTML API documentation and open it in a browser",
    "doc:json": "Generate API documentation in typedoc JSON format",
    "version": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit",
    "prepare-release": "One-step: clean, build, test, publish docs, and prep a release"
  },
  "typings": "build/index.d.ts",
  "version": "1.1.2"
}
